{
  "hash": "ce4e941c53874c6431a9c9299505bc1f",
  "result": {
    "engine": "knitr",
    "markdown": "# Euler's Method\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Rundown\n\n::: {.callout-note title=\"Learning goals\"}\n-   Explain what Euler's Method is, and why we must use numerical approximation to solve many differential equations.\n-   Manually perform a few steps of Euler's Method.\n-   Use RStudio to find an Euler's Method solution to a differential equation with initial conditions.\n:::\n\n### Euler's Method\n\nEuler's Method finds an approximate solution to a differential equation. Here is how it works. You are given\n\n-   The differential equation for $\\frac{dx}{dt}$.\n-   The initial point $(t_0,x_0)$.\n-   The step size $\\triangle t$.\n-   Either the number $n$ of iterations, or the desired end time $T$.\n\nWe want to find an approximation of the (unknown) function $x(t)$.\n\nWe repeatedly use *Local Linear Approximation* to estimate the value of $x(t)$ and times $t_1=t_0+\\triangle t$ and $t_2=t_0+2\\triangle t$ and $t_3=t_0+3\\triangle t$ and so on. Let's call these estimates $x_1, x_2, x_3$ and so on.\n\nWe estimate as follows: $$\n\\begin{array}{rcccl}\nx_1 &=& x_0 + x'(t_0) \\cdot \\triangle t \\\\\nx_2 &=& x_1 + x'(t_1) \\cdot \\triangle t &=&  x_1 + x'(t_0+\\triangle t) \\cdot \\triangle t \\\\\nx_3 &=& x_2 + x'(t_2) \\cdot \\triangle t &=&  x_2 + x'(t_0+2 \\triangle t) \\cdot \\triangle t \\\\\n\\end{array}\n$$ We repeat $n$ times. If we were given the ending time $T$, then $n= (T-t_0)/\\triangle t$.\n\nIf you only want to calculate a few steps, then you can do this manually. But in general, we use RStudio to do the hard work.\n\n#### Euler's Method in RStudio\n\nHere is code that uses Euler's Method to find an approximate solution for the following problem:\n\n-   Differential equation $\\displaystyle{\\frac{dx}{dt} = 3x  -  x^2}$\n-   Initial point $t_0=2$ and $x_0= 5$\n-   End time $T=9$\n-   Step size $\\triangle t = 0.01$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# derivative, initial conditions and setup\ndxdt = makeFun(3*x - x^2 ~ x)\ntstart = 2\nxstart = 5\ntend = 9\ndt = 0.01\nnum = (tend - tstart)/dt\n# Euler's Method code\nt = tstart\nx = xstart\ntlist = t\nxlist = x\nfor (i in 1:num) {\n  x = x + dt * dxdt(x)\n  t = t + dt\n  tlist = c(tlist, t)\n  xlist = c(xlist, x)\n}\n# print the ending point\nc(tail(tlist,1),  tail(xlist,1))\n# plot the approximate function\ngf_point(xlist ~ tlist) + xlab(\"t\") + ylab(\"x(t)\")\n```\n:::\n\n\n\n\n## Activities\n\n### Euler's Method for Two Steps\n\nFor each of the following problems, perform TWO steps of Euler's Method for the given differential equation, initial conditions and step size $\\triangle t$.\n\n1.  Differential equation $\\displaystyle{\\frac{dx}{dt} = x^2}$, initial conditions $t_0=1$ and $x_0= 3$ and step size $\\triangle t=1$.\n2.  Differential equation $\\displaystyle{\\frac{dx}{dt} = t^2}$, initial conditions $t_0=1$ and $x_0= 3$ and step size $\\triangle t=0.5$.\n3.  Differential equation $\\displaystyle{\\frac{dx}{dt} = t+x}$, initial conditions $t_0=1$ and $x_0= 3$ and step size $\\triangle t=0.25$.\n\n### Calculating an Euler Approximation\n\nUse Euler's Method to approximate the value $x(4)$ where $x(t)$ satisfies the differential equation \n$$\n\\frac{dx}{dt}=2x -6, \\quad \\mbox{where} \\quad   x(0)=4$$ \nby using times $t_0=0$, $t_1=0.5$, $t_2=1.0$ and $t_3 = 1.5$. Here is a table to get you started. \n$$\n\\begin{array}{c|c|c|c|c}\nn & t_n & x_n & x'(t_n) & x_{n} + x'(t_{n}) (t_{n+1} - t_{n}) \\\\ \n&&& = 2x_n - 6  & = x_{n} + x'(t_{n}) \\cdot 0.5  \\\\\n\\hline\n0 & 0   & 4   & 2  &        \\\\\n1 & 0.5 &     &                 \\\\\n2 & 1.0   &     &                 \\\\\n3 & 1.5 &     &                 \\\\\n4 & 2.0 &     &                 \\\\\n\\end{array}\n$$\n\n### Estimating Drug Metabolization\n\nVancomycin is an antibiotic administered at a rate of 85 milligrams per hour and is metabolized at an hourly rate equal to 0.1 times the amount of drug in the body\n\n1.  Write a differential equation relating $\\frac{dQ}{dt}$ and $Q$, where $Q$ is the quantity of the drug in the body.\n2.  Modify the Euler's Method code at the top of the page to plot a solution to your differential equation\n    -   Start with initial condition $Q(0)=0$.\n    -   Use `dt=0.1`\n    -   Run the approximation for 1000 steps\n3.  What happens to the amount of the drug in the body in the long run?\n\nMedical doctors use this sort of calculation to maintain an effective dosage.\n\n### Euler's Method with Different Step Sizes\n\nWe will use various step sizes in Euler's method to estimate the value $P(50)$ for the constrained growth problem $$\n\\frac{dP}{dt} = 0.04 P \\left( 1 - \\frac{P}{800} \\right) \\quad \\mbox{and} \\quad P(0)=100.\n$$\n\n1.  Adapt the template Euler's Method code at the top of this page to estimate $P(50)$ when\n    a.  $\\triangle t = 10$\n    b.  $\\triangle t = 1$\n    c.  $\\triangle t = 0.1$\n    d.  $\\triangle t = 0.01$\n2.  We know that the solution to this differential equation is a logistic function $\\displaystyle{P(t) = \\frac{K}{1+Ce^{-rt}}}$. Find the values for $r,C,K$. Then calculate the actual value of $P(50)$ and compare this value our estimates. How did we do in each case?\n\n\\\n\\\n\\\n\\\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n### Euler's Method for Two Steps\n\n1.  We have $\\displaystyle{\\frac{dx}{dt} = x^2}$, initial conditions $t_0=1$ and $x_0= 3$ and step size $\\triangle t=1$.\n\n\\begin{align}\nx_0 &=3 \\\\\nx_1 &= 3 + 3^2  \\cdot 1 = 12 \\\\\nx_2 &= 12 + 12^2 \\cdot 1  = 12+ 144 = 156\n\\end{align}\n\n2.  We have $\\displaystyle{\\frac{dx}{dt} = t^2}$, initial conditions $t_0=1$ and $x_0= 3$ and step size $\\triangle t=0.5$.\n\n\\begin{align}\nx_0 &=3 \\\\\nx_1 &= 3 + 1^2  \\cdot 0.5 = 3.5 \\\\\nx_2 &= 3.5 + (3.5)^2 \\cdot 0.5  = 3.5 + 6.125 =  9.625\n\\end{align}\n\n3.  We have $\\displaystyle{\\frac{dx}{dt} = t+x}$, initial conditions $t_0=1$ and $x_0= 3$ and step size $\\triangle t=0.25$.\n\n\\begin{align}\nx_0 &=3 \\\\\nx_1 &= 3 + (1+3)  \\cdot 0.25 = 3+ 1  = 4 \\\\\nx_2 &= 4 + (0.25+4) \\cdot 0.25  = 4 + 1.0625 = 5.0625\n\\end{align}\n\n### Calculating an Euler Approximation\n\nWe run Euler's Method for 4 steps. $$\n\\begin{array}{c|c|c|c|c}\nn & t_n & x_n & x'(t_n) & x_{n} + x'(t_{n}) (t_{n+1} - t_{n}) \\\\ \n&&& = 2x_n - 6  & = x_{n} + x'(t_{n}) \\cdot 0.5  \\\\\n\\hline\n0 & 0   & 4   & 2  &  4 +  2 \\cdot 0.5 =  4+1 = 5     \\\\\n1 & 0.5 & 5    &  4 & 5 + 4 \\cdot 0.5 = 5+2=7         \\\\\n2 & 1.0   &  7   &  8 & 7 + 8 \\cdot 0.5 = 7+4=11     \\\\\n3 & 1.5 &   11  &    18 & 11  + 18 \\cdot 0.5 = 11 + 9 =20    \\\\\n4 & 2.0 &   20  &                 \\\\\n\\end{array}\n$$\n\n### Estimating Drug Metabolization\n\n1.  Our differential equation is $$\n    \\frac{dQ}{dt} =  -0.1 Q + 85\n    $$\n2.  We run the Euler's Method code with $Q(0)=0$ and `dt=0.1` for 1000 steps\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# derivative, initial conditions and setup\ndxdt = makeFun(-0.1*x + 85 ~ x)\ntstart = 0\nxstart = 0\ndt = 0.1\nnum = 1000\n# Euler's Method code\nt = tstart\nx = xstart\ntlist = t\nxlist = x\nfor (i in 1:num) {\n  x = x + dt * dxdt(x)\n  t = t + dt\n  tlist = c(tlist, t)\n  xlist = c(xlist, x)\n}\n# print the ending point\nc(tail(tlist,1),  tail(xlist,1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100.0000 849.9633\n```\n\n\n:::\n\n```{.r .cell-code}\n# plot the approximate function\ngf_point(xlist ~ tlist) + xlab(\"time\") + ylab(\"Q(t)\")\n```\n\n::: {.cell-output-display}\n![](6C-EulersMethod_files/figure-html/unnamed-chunk-3-1.png){width=70%}\n:::\n:::\n\n\n\n\n3.  The amount of the drug converges to 850.\n\n### Euler's Method with Different Step Sizes\n\nWe will use various step sizes in Euler's method to estimate the value $P(50)$ for the constrained growth problem $$\n\\frac{dP}{dt} = 0.04 P \\left( 1 - \\frac{P}{800} \\right) \\quad \\mbox{and} \\quad P(0)=100.\n$$\n\n1.  We use Euler's Method code to estimate $P(50)$ when\n    a.  $\\triangle t = 10$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# derivative, initial conditions and setup\ndxdt = makeFun(0.04*x*(1-x/800) ~ x)\ntstart = 0\nxstart = 100\ntend = 50\ndt = 10\nnum = (tend - tstart)/dt\n# Euler's Method code\nt = tstart\nx = xstart\ntlist = t\nxlist = x\nfor (i in 1:num) {\n  x = x + dt * dxdt(x)\n  t = t + dt\n  tlist = c(tlist, t)\n  xlist = c(xlist, x)\n}\n# print the ending point\nc(tail(tlist,1),  tail(xlist,1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  50.000 377.373\n```\n\n\n:::\n\n```{.r .cell-code}\n# plot the approximate function\ngf_point(xlist ~ tlist) + xlab(\"time\") + ylab(\"P(t)\")\n```\n\n::: {.cell-output-display}\n![](6C-EulersMethod_files/figure-html/unnamed-chunk-4-1.png){width=70%}\n:::\n:::\n\n\n\n\nb.  $\\triangle t = 1$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# derivative, initial conditions and setup\ndxdt = makeFun(0.04*x*(1-x/800) ~ x)\ntstart = 0\nxstart = 100\ntend = 50\ndt = 1\nnum = (tend - tstart)/dt\n# Euler's Method code\nt = tstart\nx = xstart\ntlist = t\nxlist = x\nfor (i in 1:num) {\n  x = x + dt * dxdt(x)\n  t = t + dt\n  tlist = c(tlist, t)\n  xlist = c(xlist, x)\n}\n# print the ending point\nc(tail(tlist,1),  tail(xlist,1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  50.0000 407.5033\n```\n\n\n:::\n\n```{.r .cell-code}\n# plot the approximate function\ngf_point(xlist ~ tlist) + xlab(\"time\") + ylab(\"P(t)\")\n```\n\n::: {.cell-output-display}\n![](6C-EulersMethod_files/figure-html/unnamed-chunk-5-1.png){width=70%}\n:::\n:::\n\n\n\n\nc.  $\\triangle t = 0.1$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# derivative, initial conditions and setup\ndxdt = makeFun(0.04*x*(1-x/800) ~ x)\ntstart = 0\nxstart = 100\ntend = 50\ndt = 0.1\nnum = (tend - tstart)/dt\n# Euler's Method code\nt = tstart\nx = xstart\ntlist = t\nxlist = x\nfor (i in 1:num) {\n  x = x + dt * dxdt(x)\n  t = t + dt\n  tlist = c(tlist, t)\n  xlist = c(xlist, x)\n}\n# print the ending point\nc(tail(tlist,1),  tail(xlist,1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  50.0000 410.4851\n```\n\n\n:::\n\n```{.r .cell-code}\n# plot the approximate function\ngf_point(xlist ~ tlist) + xlab(\"time\") + ylab(\"P(t)\")\n```\n\n::: {.cell-output-display}\n![](6C-EulersMethod_files/figure-html/unnamed-chunk-6-1.png){width=70%}\n:::\n:::\n\n\n\n\nd.  $\\triangle t = 0.01$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# derivative, initial conditions and setup\ndxdt = makeFun(0.04*x*(1-x/800) ~ x)\ntstart = 0\nxstart = 100\ntend = 50\ndt = 0.01\nnum = (tend - tstart)/dt\n# Euler's Method code\nt = tstart\nx = xstart\ntlist = t\nxlist = x\nfor (i in 1:num) {\n  x = x + dt * dxdt(x)\n  t = t + dt\n  tlist = c(tlist, t)\n  xlist = c(xlist, x)\n}\n# print the ending point\nc(tail(tlist,1),  tail(xlist,1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  50.0000 410.7823\n```\n\n\n:::\n\n```{.r .cell-code}\n# plot the approximate function\ngf_point(xlist ~ tlist) + xlab(\"time\") + ylab(\"P(t)\")\n```\n\n::: {.cell-output-display}\n![](6C-EulersMethod_files/figure-html/unnamed-chunk-7-1.png){width=70%}\n:::\n:::\n\n\n\n\n2.  We have $$\n    P(t) = \\frac{800}{1+Ce^{-0.04t}} \\qquad \\mbox{and} \\qquad P(0)=100\n    $$ so $C=7$ and our function is $$\n    P(t) = \\frac{800}{1+7e^{-0.04t}}.\n    $$ Evaluting at $t=50$ gives $$\n    P(50)=410.8153.\n    $$ The estimates when $\\triangle t=0.1$ and $\\triangle  t=0.01$ are very good!\n\n\n\n\n````{=html}\n<!--    \n    \n::: {.cell}\n\n```{.r .cell-code}\n# derivative, initial conditions and setup\ndxdt = makeFun(0.04*x*(1-x/800) ~ x)\ntstart = 0\nxstart = 100\ntend = 50\ndt = 0.01\nnum = (tend - tstart)/dt\n# Euler's Method code\nt = tstart\nx = xstart\ntlist = t\nxlist = x\nfor (i in 1:num) {\n  x = x + dt * dxdt(x)\n  t = t + dt\n  tlist = c(tlist, t)\n  xlist = c(xlist, x)\n}\n# print the ending point\nc(tail(tlist,1),  tail(xlist,1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  50.0000 410.7823\n```\n\n\n:::\n\n```{.r .cell-code}\n# plot the approximate function\n#plotPoints(xlist ~ tlist)\n```\n:::\n\na. When $\\triangle t=10$, our  estimate is $P(50)=377.37$\nb. When $\\triangle t=1$, our  estimate is $P(50)=407.50$\nc. When $\\triangle t=0.1$, our  estimate is $P(50)=410.49$\nd. When $\\triangle t=0.01$, our  estimate is $P(50)=410.78$\n\n-->\n````\n\n\n\n\n</details>\n",
    "supporting": [
      "6C-EulersMethod_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}